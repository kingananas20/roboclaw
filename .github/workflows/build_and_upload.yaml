name: Build for aarch64 and upload to pypi

on:
  push:
    paths:
      - "Cargo.toml"

jobs:
  check_version:
    runs-on: ubuntu-24.04
    outputs:
      version_changed: ${{ steps.version_check.outputs.changed }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
      
      - name: Check if the version changed
        id: version_check
        run: |
          if git diff HEAD^ HEAD -- Cargo.toml | grep -E '^\+version\s*=\s*".+"$'; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi
  
  build-linux:
    needs: check_version
    if: needs.check_version.outputs.version_changed == 'true'
    strategy:
      matrix:
        arch: [ubuntu-24.04, ubuntu-24.04-arm]
    runs-on: ${{ matrix.arch }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libudev-dev musl-tools gcc-aarch64-linux-gnu
          pip3 install maturin twine

      - name: Add musl targets
        run: |
          rustup target add x86_64-unknown-linux-musl
          rustup target add aarch64-unknown-linux-musl

      - name: Build for x86_64
        if: matrix.arch == 'ubuntu-24.04'
        run: |
          maturin build --target x86_64-unknown-linux-musl --release
          maturin build --release
      
      - name: Build for arch64
        if: matrix.arch == 'ubuntu-24.04-arm'
        run: |
          maturin build --target aarch64-unknown-linux-musl --release
          maturin build --release

      - name: Upload wheel as artifact
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.arch }}
          path: ./target/wheels/*.whl
          retention-days: 1

  build-windows:
    needs: check_version
    if: needs.check_version.outputs.version_changed == 'true'
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      
      - name: Install dependencies
        run: |
          pip install maturin twine

      - name: Build
        run: |
          maturin build --release

      - name: Upload wheel to artifact
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows
          path: ./target/wheels/*.whl
          retention-days: 1

  upload:
    needs: [build-linux, build-windows]
    runs-on: ubuntu-24.04
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Combine wheels into one directory
        run: |
          mkdir -p combined_wheels
          find dist -name '*.whl' -exec mv {} combined_wheels/ \;

      - name: Install twine
        run: |
          pip install twine

      - name: Check wheels
        run: |
          python3 -m twine check combined_wheels/*

      - name: Upload to PyPi
        run: |
          python3 -m twine upload combined_wheels/* -p ${{ secrets.PYPI_TOKEN }}